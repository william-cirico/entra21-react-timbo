{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\nvar initialState = {\n  email: \"\",\n  isEmailValid: false,\n  password: \"\",\n  isPasswordValid: false\n};\nexport function LoginScreen() {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    if (emailRegExp.test(state.email)) {\n      console.log(\"É um e-mail\");\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isEmailValid: true\n        });\n      });\n    } else {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isEmailValid: false\n        });\n      });\n    }\n  }, [state.email]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(ValidationInput, {\n    value: state.email,\n    onChange: function onChange(text) {\n      return setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: text\n        });\n      });\n    },\n    placeholder: \"usuario@email.com\",\n    isValid: state.isEmailValid,\n    regExp: emailRegExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(ValidationInput, {\n    value: state.password,\n    onChange: function onChange(text) {\n      return setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: text\n        });\n      });\n    },\n    placeholder: \"\",\n    isValid: state.isPasswordValid,\n    regExp: emailRegExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js"],"names":["React","useEffect","useState","ValidationInput","emailRegExp","initialState","email","isEmailValid","password","isPasswordValid","LoginScreen","state","setState","test","console","log","prevState","styles","container","text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,eAAT;AACA,SAASC,WAAT;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,YAAY,EAAE,KAFG;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,eAAe,EAAE;AAJA,CAArB;AAOA,OAAO,SAASC,WAAT,GAAuB;AAC1B,kBAA0BR,QAAQ,CAACG,YAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIG,WAAW,CAACS,IAAZ,CAAiBF,KAAK,CAACL,KAAvB,CAAJ,EAAmC;AAC/BQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAH,MAAAA,QAAQ,CAAC,UAAAI,SAAS;AAAA,+CAAUA,SAAV;AAAqBT,UAAAA,YAAY,EAAE;AAAnC;AAAA,OAAV,CAAR;AACH,KAHD,MAGO;AACHK,MAAAA,QAAQ,CAAC,UAAAI,SAAS;AAAA,+CAAUA,SAAV;AAAqBT,UAAAA,YAAY,EAAE;AAAnC;AAAA,OAAV,CAAR;AACH;AAEJ,GARQ,EAQN,CAACI,KAAK,CAACL,KAAP,CARM,CAAT;AAUA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAEP,KAAK,CAACL,KADjB;AAEI,IAAA,QAAQ,EAAE,kBAAAa,IAAI;AAAA,aAAIP,QAAQ,CAAC,UAAAI,SAAS;AAAA,+CAAUA,SAAV;AAAqBV,UAAAA,KAAK,EAAEa;AAA5B;AAAA,OAAV,CAAZ;AAAA,KAFlB;AAGI,IAAA,WAAW,EAAC,mBAHhB;AAII,IAAA,OAAO,EAAER,KAAK,CAACJ,YAJnB;AAKI,IAAA,MAAM,EAAEH,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAEO,KAAK,CAACH,QADjB;AAEI,IAAA,QAAQ,EAAE,kBAAAW,IAAI;AAAA,aAAIP,QAAQ,CAAC,UAAAI,SAAS;AAAA,+CAAUA,SAAV;AAAqBV,UAAAA,KAAK,EAAEa;AAA5B;AAAA,OAAV,CAAZ;AAAA,KAFlB;AAGI,IAAA,WAAW,EAAC,EAHhB;AAII,IAAA,OAAO,EAAER,KAAK,CAACF,eAJnB;AAKI,IAAA,MAAM,EAAEL,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAiBH;AAED,IAAMa,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,OAAO,EAAE;AALA;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\n\nconst initialState = {\n    email: \"\",\n    isEmailValid: false,\n    password: \"\",\n    isPasswordValid: false,\n}\n\nexport function LoginScreen() {\n    const [state, setState] = useState(initialState);\n\n    useEffect(() => {        \n        if (emailRegExp.test(state.email)) {\n            console.log(\"É um e-mail\")\n            setState(prevState => ({ ...prevState, isEmailValid: true }))\n        } else {\n            setState(prevState => ({ ...prevState, isEmailValid: false }))\n        }\n                  \n    }, [state.email]);\n\n    return (\n        <View style={styles.container}>\n            <ValidationInput \n                value={state.email}\n                onChange={text => setState(prevState => ({ ...prevState, email: text }))}\n                placeholder=\"usuario@email.com\"\n                isValid={state.isEmailValid}\n                regExp={emailRegExp}/>\n            \n            <ValidationInput \n                value={state.password}\n                onChange={text => setState(prevState => ({ ...prevState, email: text }))}\n                placeholder=\"\"\n                isValid={state.isPasswordValid}\n                regExp={emailRegExp}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 10\n    },\n});"]},"metadata":{},"sourceType":"module"}