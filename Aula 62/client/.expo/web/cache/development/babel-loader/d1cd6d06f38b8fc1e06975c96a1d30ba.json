{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/william/entra21-react-timbo/Aula 62/client/components/ValidationInput.js\";\nvar _excluded = [\"regExp\", \"isValid\", \"labelText\"];\nimport React, { useEffect, useRef, useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign } from '@expo/vector-icons';\nimport colors from \"../theme/colors\";\nimport size from \"../theme/fonts\";\nexport function ValidationInput(_ref) {\n  var regExp = _ref.regExp,\n      isValid = _ref.isValid,\n      labelText = _ref.labelText,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var inputRef = useRef(null);\n\n  function handleFocus() {\n    inputRef.current.placeholder = \"\";\n    setFocused(true);\n  }\n\n  function handleEndEditing() {\n    inputRef.current.placeholder = \"teste\";\n    setFocused(false);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, labelText), React.createElement(View, {\n    style: styles.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, _extends({}, rest, {\n    ref: inputRef,\n    style: styles.input,\n    onFocus: handleFocus,\n    onBlur: handleEndEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), isValid && React.createElement(AntDesign, {\n    name: \"checkcircle\",\n    style: styles.icon,\n    size: 24,\n    color: colors.check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  },\n  containerInput: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 4\n  },\n  label: {\n    alignSelf: \"flex-start\",\n    fontSize: size.label\n  },\n  input: {\n    backgroundColor: \"white\",\n    fontSize: size.input,\n    flex: 1\n  },\n  icon: {\n    paddingRight: 5\n  }\n});","map":{"version":3,"sources":["/home/william/entra21-react-timbo/Aula 62/client/components/ValidationInput.js"],"names":["React","useEffect","useRef","useState","AntDesign","colors","size","ValidationInput","regExp","isValid","labelText","rest","focused","setFocused","inputRef","handleFocus","current","placeholder","handleEndEditing","styles","container","label","containerInput","input","icon","check","StyleSheet","create","flexDirection","alignItems","padding","borderWidth","borderRadius","alignSelf","fontSize","backgroundColor","flex","paddingRight"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AAEA,OAAO,SAASC,eAAT,OAAkE;AAAA,MAAvCC,MAAuC,QAAvCA,MAAuC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAARC,IAAQ;;AACrE,kBAA8BR,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;;AAEA,WAASa,WAAT,GAAuB;AACnBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,WAAjB,GAA+B,EAA/B;AACAJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,WAASK,gBAAT,GAA4B;AACxBJ,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,WAAjB,GAA+B,OAA/B;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BX,SAA5B,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD,eACQX,IADR;AAEI,IAAA,GAAG,EAAEG,QAFT;AAGI,IAAA,KAAK,EAAEK,MAAM,CAACI,KAHlB;AAII,IAAA,OAAO,EAAER,WAJb;AAKI,IAAA,MAAM,EAAEG,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAQMT,OAAO,IAAI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAA8B,IAAA,KAAK,EAAEU,MAAM,CAACK,IAA5C;AAAkD,IAAA,IAAI,EAAE,EAAxD;AAA4D,IAAA,KAAK,EAAEnB,MAAM,CAACoB,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARjB,CAFJ,CADJ;AAeH;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,aAAa,EAAE;AADR,GADkB;AAI7BN,EAAAA,cAAc,EAAE;AACZM,IAAAA,aAAa,EAAE,KADH;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,OAAO,EAAE,EAHG;AAIZC,IAAAA,WAAW,EAAE,CAJD;AAKZC,IAAAA,YAAY,EAAE;AALF,GAJa;AAW7BX,EAAAA,KAAK,EAAE;AACHY,IAAAA,SAAS,EAAE,YADR;AAEHC,IAAAA,QAAQ,EAAE5B,IAAI,CAACe;AAFZ,GAXsB;AAgB7BE,EAAAA,KAAK,EAAE;AACHY,IAAAA,eAAe,EAAE,OADd;AAEHD,IAAAA,QAAQ,EAAE5B,IAAI,CAACiB,KAFZ;AAGHa,IAAAA,IAAI,EAAE;AAHH,GAhBsB;AAqB7BZ,EAAAA,IAAI,EAAE;AACFa,IAAAA,YAAY,EAAE;AADZ;AArBuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { TextInput, View, Text, StyleSheet } from \"react-native\";\nimport { AntDesign } from '@expo/vector-icons';\nimport colors from \"../theme/colors\";\nimport size from \"../theme/fonts\";\n\nexport function ValidationInput({ regExp, isValid, labelText, ...rest }) {      \n    const [focused, setFocused] = useState(false);\n    const inputRef = useRef(null);\n\n    function handleFocus() {\n        inputRef.current.placeholder = \"\";\n        setFocused(true);\n    }\n\n    function handleEndEditing() {\n        inputRef.current.placeholder = \"teste\";\n        setFocused(false);\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.label}>{labelText}</Text>\n            <View style={styles.containerInput}>            \n                <TextInput \n                    {...rest}   \n                    ref={inputRef}\n                    style={styles.input}  \n                    onFocus={handleFocus}\n                    onBlur={handleEndEditing}\n                />                  \n                { isValid && <AntDesign name=\"checkcircle\" style={styles.icon} size={24} color={colors.check} /> }\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"row\"\n    },\n    containerInput: {        \n        flexDirection: \"row\",\n        alignItems: \"center\",\n        padding: 10,\n        borderWidth: 1,\n        borderRadius: 4\n    },\n    label: {\n        alignSelf: \"flex-start\",\n        fontSize: size.label,\n\n    },\n    input: {\n        backgroundColor: \"white\",\n        fontSize: size.input,\n        flex: 1,        \n    },\n    icon: {                \n        paddingRight: 5\n    }\n});"]},"metadata":{},"sourceType":"module"}