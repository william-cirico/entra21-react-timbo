{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\nexport function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEmailValid = _useState4[0],\n      setIsEmailValid = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  useEffect(function () {\n    emailRegExp.test(email) ? setIsEmailValid(true) : setIsEmailValid(false);\n  }, [email]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(ValidationInput, {\n    value: email,\n    onChange: setEmail,\n    placeholder: \"usuario@email.com\",\n    isValid: isEmailValid,\n    regExp: emailRegExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js"],"names":["React","useEffect","useState","ValidationInput","emailRegExp","LoginScreen","email","setEmail","isEmailValid","setIsEmailValid","password","setPassword","test","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,eAAT;AACA,SAASC,WAAT;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC1B,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwCL,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOM,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAgCP,QAAQ,EAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,WAAW,CAACQ,IAAZ,CAAiBN,KAAjB,IAA0BG,eAAe,CAAC,IAAD,CAAzC,GAAkDA,eAAe,CAAC,KAAD,CAAjE;AACH,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAER,KADX;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,WAAW,EAAC,mBAHhB;AAII,IAAA,OAAO,EAAEC,YAJb;AAKI,IAAA,MAAM,EAAEJ,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH;AAED,IAAMS,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\n\nexport function LoginScreen() {\n    const [email, setEmail] = useState(\"\");\n    const [isEmailValid, setIsEmailValid] = useState(false);\n    const [password, setPassword] = useState()\n\n    useEffect(() => {\n        emailRegExp.test(email) ? setIsEmailValid(true) : setIsEmailValid(false);        \n    }, [email]);\n\n    return (\n        <View style={styles.container}>\n            <ValidationInput \n                value={email}\n                onChange={setEmail}\n                placeholder=\"usuario@email.com\"\n                isValid={isEmailValid}\n                regExp={emailRegExp}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n});"]},"metadata":{},"sourceType":"module"}