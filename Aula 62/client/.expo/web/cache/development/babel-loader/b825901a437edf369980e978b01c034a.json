{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from \"../components/Button\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\nvar initialState = {\n  email: \"\",\n  isEmailValid: false,\n  password: \"\",\n  isPasswordValid: false\n};\nexport function LoginScreen() {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEmailValid = _useState6[0],\n      setIsEmailValid = _useState6[1];\n\n  useEffect(function () {}, [state.isEmailValid, state.isPasswordValid]);\n\n  function handleEmailChange(text) {\n    if (emailRegExp.test(text)) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: text,\n          isEmailValid: true\n        });\n      });\n    } else {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: text,\n          isEmailValid: false\n        });\n      });\n    }\n  }\n\n  function handlePasswordChange(text) {\n    if (text.trim().length >= 6) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password: text,\n          isPasswordValid: true\n        });\n      });\n    } else {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password: text,\n          isPasswordValid: false\n        });\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(ValidationInput, {\n    value: state.email,\n    onChangeText: function onChangeText(text) {\n      return handleEmailChange(text);\n    },\n    placeholder: \"Seu e-mail\",\n    labelText: \"E-mail\",\n    keyboardType: \"email-address\",\n    isValid: state.isEmailValid,\n    regExp: emailRegExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(ValidationInput, {\n    value: state.password,\n    onChangeText: handlePasswordChange,\n    placeholder: \"Sua senha\",\n    labelText: \"Senha\",\n    isValid: state.isPasswordValid,\n    regExp: emailRegExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    text: \"Login\",\n    disabled: isLoginValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js"],"names":["React","useEffect","useState","Button","ValidationInput","emailRegExp","initialState","email","isEmailValid","password","isPasswordValid","LoginScreen","state","setState","setEmail","setIsEmailValid","handleEmailChange","text","test","prevState","handlePasswordChange","trim","length","styles","container","isLoginValid","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { Button } from \"../components/Button\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\n\nconst initialState = {\n    email: \"\",\n    isEmailValid: false,\n    password: \"\",\n    isPasswordValid: false,\n}\n\nexport function LoginScreen() {\n    const [state, setState] = useState(initialState);\n    const [email, setEmail] = useState(\"\");\n    const [isEmailValid, setIsEmailValid] = useState(false);\n\n    useEffect(() => {\n\n    }, [state.isEmailValid, state.isPasswordValid]);\n\n    function handleEmailChange(text) {\n        if (emailRegExp.test(text)) {\n            setState(prevState => ({\n                ...prevState, \n                email: text, \n                isEmailValid: true \n            }));\n        } else {\n            setState(prevState => ({\n                ...prevState, \n                email: text,\n                isEmailValid: false\n            }));\n        }   \n    }\n\n    function handlePasswordChange(text) {\n        if (text.trim().length >= 6) {\n            setState(prevState => ({\n                ...prevState, \n                password: text, \n                isPasswordValid: true \n            }));\n        } else {\n            setState(prevState => ({\n                ...prevState, \n                password: text,\n                isPasswordValid: false\n            }));\n        } \n    }\n\n    return (\n        <View style={styles.container}>\n            <ValidationInput \n                value={state.email}\n                onChangeText={text => handleEmailChange(text)}\n                placeholder=\"Seu e-mail\"\n                labelText=\"E-mail\"\n                keyboardType=\"email-address\"\n                isValid={state.isEmailValid}\n                regExp={emailRegExp}/>\n            \n            <ValidationInput \n                value={state.password}\n                onChangeText={handlePasswordChange}\n                placeholder=\"Sua senha\"\n                labelText=\"Senha\"\n                isValid={state.isPasswordValid}\n                regExp={emailRegExp}/>\n            <Button text=\"Login\" disabled={isLoginValid} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 10\n    },\n});"]},"metadata":{},"sourceType":"module"}