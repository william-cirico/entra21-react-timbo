{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from \"../components/Button\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\nexport function LoginScreen() {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function handleEmailChange(text) {\n    console.warn(text);\n\n    if (emailRegExp.test(state.email)) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        email: text,\n        isEmailValid: true\n      }));\n    } else {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        email: text,\n        isEmailValid: false\n      }));\n    }\n  }\n\n  function handlePasswordChange(text) {\n    if (text.length >= 6) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        password: text,\n        isPasswordValid: true\n      }));\n    } else {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        password: text,\n        isPasswordValid: false\n      }));\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(ValidationInput, {\n    value: state.email,\n    onChange: function onChange(text) {\n      return handleEmailChange(text);\n    },\n    placeholder: \"Seu e-mail\",\n    labelText: \"E-mail\",\n    isValid: state.isEmailValid,\n    regExp: emailRegExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(ValidationInput, {\n    value: state.password,\n    onChange: function onChange(text) {\n      return handlePasswordChange(text);\n    },\n    placeholder: \"Sua senha\",\n    labelText: \"Senha\",\n    isValid: state.isPasswordValid,\n    regExp: emailRegExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    text: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/william/entra21-react-timbo/Aula 62/client/screens/LoginScreen.js"],"names":["React","useEffect","useState","Button","ValidationInput","emailRegExp","LoginScreen","initialState","state","setState","handleEmailChange","text","console","warn","test","email","isEmailValid","handlePasswordChange","length","password","isPasswordValid","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,MAAT;AACA,SAASC,eAAT;AACA,SAASC,WAAT;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC1B,kBAA0BJ,QAAQ,CAACK,YAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAGA,WAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC7BC,IAAAA,OAAO,CAACC,IAAR,CAAaF,IAAb;;AACA,QAAIN,WAAW,CAACS,IAAZ,CAAiBN,KAAK,CAACO,KAAvB,CAAJ,EAAmC;AAC/BN,MAAAA,QAAQ,iCACDD,KADC;AAEJO,QAAAA,KAAK,EAAEJ,IAFH;AAGJK,QAAAA,YAAY,EAAE;AAHV,SAAR;AAKH,KAND,MAMO;AACHP,MAAAA,QAAQ,iCACDD,KADC;AAEJO,QAAAA,KAAK,EAAEJ,IAFH;AAGJK,QAAAA,YAAY,EAAE;AAHV,SAAR;AAKH;AACJ;;AAED,WAASC,oBAAT,CAA8BN,IAA9B,EAAoC;AAChC,QAAIA,IAAI,CAACO,MAAL,IAAe,CAAnB,EAAsB;AAClBT,MAAAA,QAAQ,iCACDD,KADC;AAEJW,QAAAA,QAAQ,EAAER,IAFN;AAGJS,QAAAA,eAAe,EAAE;AAHb,SAAR;AAKH,KAND,MAMO;AACHX,MAAAA,QAAQ,iCACDD,KADC;AAEJW,QAAAA,QAAQ,EAAER,IAFN;AAGJS,QAAAA,eAAe,EAAE;AAHb,SAAR;AAKH;AACJ;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAEd,KAAK,CAACO,KADjB;AAEI,IAAA,QAAQ,EAAE,kBAAAJ,IAAI;AAAA,aAAID,iBAAiB,CAACC,IAAD,CAArB;AAAA,KAFlB;AAGI,IAAA,WAAW,EAAC,YAHhB;AAII,IAAA,SAAS,EAAC,QAJd;AAKI,IAAA,OAAO,EAAEH,KAAK,CAACQ,YALnB;AAMI,IAAA,MAAM,EAAEX,WANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAEG,KAAK,CAACW,QADjB;AAEI,IAAA,QAAQ,EAAE,kBAAAR,IAAI;AAAA,aAAIM,oBAAoB,CAACN,IAAD,CAAxB;AAAA,KAFlB;AAGI,IAAA,WAAW,EAAC,WAHhB;AAII,IAAA,SAAS,EAAC,OAJd;AAKI,IAAA,OAAO,EAAEH,KAAK,CAACY,eALnB;AAMI,IAAA,MAAM,EAAEf,WANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAgBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADJ;AAoBH;AAED,IAAMgB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,OAAO,EAAE;AALA;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { Button } from \"../components/Button\";\nimport { ValidationInput } from \"../components/ValidationInput\";\nimport { emailRegExp } from \"../utils/regExpValidations\";\n\nexport function LoginScreen() {\n    const [state, setState] = useState(initialState);\n    \n\n    function handleEmailChange(text) {\n        console.warn(text);\n        if (emailRegExp.test(state.email)) {            \n            setState({\n                ...state,\n                email: text,\n                isEmailValid: true\n            });\n        } else {            \n            setState({\n                ...state, \n                email: text,\n                isEmailValid: false\n            });\n        }        \n    }\n\n    function handlePasswordChange(text) {\n        if (text.length >= 6) {\n            setState({\n                ...state, \n                password: text, \n                isPasswordValid: true \n            });\n        } else {\n            setState({\n                ...state, \n                password: text, \n                isPasswordValid: false\n            });\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <ValidationInput \n                value={state.email}\n                onChange={text => handleEmailChange(text)}\n                placeholder=\"Seu e-mail\"\n                labelText=\"E-mail\"\n                isValid={state.isEmailValid}\n                regExp={emailRegExp}/>\n            \n            <ValidationInput \n                value={state.password}\n                onChange={text => handlePasswordChange(text)}\n                placeholder=\"Sua senha\"\n                labelText=\"Senha\"\n                isValid={state.isPasswordValid}\n                regExp={emailRegExp}/>\n            <Button text=\"Login\" />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 10\n    },\n});"]},"metadata":{},"sourceType":"module"}